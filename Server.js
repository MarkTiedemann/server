new ActiveXObject("WScript.Shell").run("powershell -c \"[System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms'); [System.Reflection.Assembly]::LoadWithPartialName('System.Drawing'); $Process = [System.Diagnostics.Process]::New(); $Process.StartInfo.FileName = 'powershell'; $Process.StartInfo.Arguments = '-c \"[System.Reflection.Assembly]::LoadWithPartialName(''System.Web''); $Server = [System.Net.HttpListener]::New(); $Server.Prefixes.Add(''http://localhost:8000/''); $Server.Start(); while ($Server.IsListening) { $Context = $Server.GetContext(); $Request = $Context.Request; $Response = $Context.Response; if ($Request.HttpMethod -ne ''GET'') { $Response.StatusCode = 405; $Response.Close(); continue; } try { $Path = ''.'' + $Request.Url.LocalPath -replace ''/'', ''\\''; $File = [System.IO.File]::OpenRead($Path); $Response.ContentType = [System.Web.MimeMapping]::GetMimeMapping($Path); $File.CopyTo($Response.OutputStream); $Response.Close(); $File.Close(); } catch { $Response.StatusCode = 404; $Response.Close(); } }\"'; $Process.StartInfo.UseShellExecute = $false; $Process.StartInfo.CreateNoWindow = $true; $Process.Start(); $IconPath = [System.Environment]::ExpandEnvironmentVariables('%SystemRoot%\\System32\\newdev.exe'); $Icon = [System.Drawing.Icon]::ExtractAssociatedIcon($IconPath); $CurrentUICulture = [System.Globalization.CultureInfo]::CurrentUICulture; $Text = switch ($CurrentUICulture.TwoLetterISOLanguageName) { 'en' { 'Close server' } 'de' { 'Server schlie√üen' } }; $NotifyIcon = [System.Windows.Forms.NotifyIcon]::New(); $NotifyIcon.Icon = $Icon; $NotifyIcon.Text = $Text; $NotifyIcon.Visible = $true; $NotifyIcon.Add_Click({ if (!$Process.HasExited) { $Process.Kill(); } $ApplicationContext.ExitThread(); }); $ApplicationContext = [System.Windows.Forms.ApplicationContext]::New(); [System.Windows.Forms.Application]::Run($ApplicationContext);\"", 0, false);